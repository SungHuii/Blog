## 1 워크플로의 이름 지정 (CI를 실행하기 위한 스크립트의 모음이므로 CI)
#name: CI
#
## 2 워크플로가 시작될 조건 지정
## main 브랜치에 푸시를 할때마다 워크플로를 시작하도록 작성
#on:
#  push:
#    branches: [ main ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest # 3 실행 환경 지정 (윈도우나 리눅스같은 실행 환경을 지정)
#    # 4 실행 스텝 지정(그룹화)
#    steps:
#      - uses: actions/checkout@v4
#        # uses 키워드는 지정한 리포지터리를 확인하고 코드에 대한 작업을 실행 가능
#        # action/checkout에는 checkout이라는 작업의 v3 버전을 실행함
#
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#
#        # name : 스텝의 이름을 지정함
#        # run : 실행할 명렁어를 입력.
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build
#        # ./gradlew clean build에는 그레들을 사용해 프로젝트를 빌드 이전 상태로 돌리고
#        # 다시 빌드하는 명령어를 실행함

name: CI/CD # 깃허브 액션 이름 변경

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 플러그인을 사용하여 현재 시간 가져오기
      # 가져온 시간은 배포 버전을 지정할 때 사용
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 저장
      # 빌드 이후 생성된 jar 파일을 찾아 artifact라는 환경 변수에 값을 넣어줌
      # $GITHUB_ENV를 사용해 깃허브 워크플로 전체적으로 사용할 수 있는 환경 변수 설정 가능
      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV

      # 빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        # einaregilsson/beanstalk-deploy@v20 플러그인 사용
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: springboot-developer
          environment_name: springboot-developer-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: ./build/libs/${{env.artifact}}