plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'me.sunghui'
version = '1.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    runtimeOnly 'com.h2database:h2'
//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//
//    // 스프링 시큐리티를 사용하기 위한 스타터 추가
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    // 타임리프에서 스프링 시큐리티를 사용하기 위한 의존성 추가
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
//    // 스프링 시큐리티를 테스트하기 위한 의존성 추가
//    testImplementation 'org.springframework.security:spring-security-test'
//
//    testAnnotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.projectlombok:lombok'
//    implementation 'io.jsonwebtoken:jjwt:0.9.1' // 자바 JWT 라이브러리
//    implementation 'javax.xml.bind:jaxb-api:2.3.1' // XML 문서와 Java 객체 간 매핑 자동화
//
//    // OAuth2를 사용하기 위한 스타터 추가
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//
//    // 아마존 서버에서 MySQL을 사용하므로 의존성 추가
//    implementation 'com.mysql:mysql-connector-j'
//
//    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    // 테스트를 진행할 때 가짜 데이터를 생성해주는 오픈소스 라이브러리
//    // ex. 이름, 주소, 이메일 같은 가짜 정보를 생성
//    testImplementation 'net.datafaker:datafaker:2.0.2'
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'net.datafaker:datafaker:2.0.2'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

jar {
    enabled = false
}